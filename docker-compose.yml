version: '3.8'
services:
  postgres:
    container_name: postgres_db
    image: postgres:15.3
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - '8080:8080' # For app
      - '8000:8000' # For jobrunr dashboard
    expose:
      - 8080 # For app
      - 8000 # For jobrunr dashboard
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.44.0
    ports:
      - '9090:9090'
    expose:
      - 9090
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    container_name: grafana
    image: grafana/grafana:10.0.0
    ports:
      - '3000:3000'
    expose:
      - 3000
    volumes:
      - ./grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  postgres-data: